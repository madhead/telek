stages:
  - Test
  - Smoke
  - Publish

.unit:
  stage: Test
  cache:
    key: $CI_JOB_NAME
    paths:
      - .gradle/wrapper
      - .gradle/caches
  before_script:
    - export GRADLE_USER_HOME=`pwd`/.gradle
    - export GRADLE_OPTS='-Dorg.gradle.daemon=false'
  script:
    - &unit ./gradlew test jacocoTestReport --stacktrace --scan
  artifacts:
    name: $CI_COMMIT_SHA-$CI_JOB_NAME
    when: always
    expire_in: 1 day
    paths:
      - "**/build/reports"
      - "**/build/test-results"
      - "**/build/jacoco"
    reports:
      junit:
        - "**/build/test-results/test/TEST-*.xml"

# Check if logo.png in the root of the repo corresponds to the content of assets/src/logo.svg.
logo:
  stage: Test
  image: madhead/imagemagick
  dependencies: []
  script:
    - convert -background none -density 300 -resize 128x128 assets/src/logo.svg logo.check.png
    - magick compare -verbose -metric ae logo.png logo.check.png diff.png
  artifacts:
    name: $CI_COMMIT_SHA-$CI_JOB_NAME
    paths:
      - diff.png
    expire_in: 1 day
    when: on_failure

gradle-version:
  stage: Test
  image: openjdk:13
  dependencies: []
  script:
    - gradle_version=$(./gradlew --version | sed -rn 's/^Gradle (.+)$/\1/p')
    - latest_gradle_version=$(curl https://services.gradle.org/versions/current | python2 -c 'import json,sys;print json.load(sys.stdin)["version"]')
    - echo $gradle_version
    - echo $latest_gradle_version
    - '[[ $gradle_version == $latest_gradle_version ]]'

ktlint:
  stage: Test
  image: openjdk:13
  dependencies: []
  script:
    - ./gradlew ktlintCheck

detekt:
  stage: Test
  image: openjdk:13
  dependencies: []
  script:
    - ./gradlew :detekt

unit@openjdk:8:
  extends: .unit
  image: openjdk:8
  script:
    - *unit
    - bash <(curl -s https://codecov.io/bash)

unit@openjdk:10:
  extends: .unit
  image: openjdk:10

unit@openjdk:11:
  extends: .unit
  image: openjdk:11

unit@openjdk:12:
  extends: .unit
  image: openjdk:12

unit@openjdk:13:
  extends: .unit
  image: openjdk:13

smoke:
  stage: Smoke
  image: openjdk:13
  cache:
    key: $CI_JOB_NAME
    paths:
      - .gradle/wrapper
      - .gradle/caches
  before_script:
    - export GRADLE_USER_HOME=`pwd`/.gradle
    - export GRADLE_OPTS='-Dorg.gradle.daemon=false'
  script:
    - ./gradlew smokeTest jacocoTestReport --stacktrace --scan
  artifacts:
    name: $CI_COMMIT_SHA-$CI_JOB_NAME
    when: always
    expire_in: 1 day
    paths:
      - "**/build/reports"
      - "**/build/test-results"
      - "**/build/jacoco"
    reports:
      junit:
        - "**/build/test-results/smokeTest/TEST-*.xml"

bintray:
  stage: Publish
  image: openjdk:8
  script:
    - ./gradlew publish
  dependencies: []

pages:
  stage: Publish
  image: openjdk:8
  script:
    - ./gradlew clean :docs:asciidoctor :dokka
    - mkdir public
    - cp -r docs/build/docs/asciidoc public/user-guide
    - cp -r build/dokka public/api-docs
  only:
    - master
  dependencies: []
  artifacts:
    paths:
      - public
